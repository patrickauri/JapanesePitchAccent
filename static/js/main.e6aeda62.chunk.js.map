{"version":3,"sources":["config/Utilities.tsx","components/PitchCard.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["PitchType","WordType","IsSmallKana","k","found","forEach","e","GetPitchTypeName","n","Heiban","Atamadaka","Nakadaka","Odaka","PitchCard","data","parsedData","dWord","dPitch","dMora","result","word","pitchNumber","reading","pitchType","NONE","mora","wordType","OTHER","locStart","indexOf","locEnd","substring","ParseNHKWord","includes","replace","a","split","dropFound","i","charCodeAt","splice","toString","ParseNHKPitchNumber","readingKana","ParseNHKReading","index","length","m","ParseNHKMora","ParseNHKPitchType","undefined","Verb","Adj","ParseNHK","className","PitchDrawing","readingList","currentMora","_mora","push","type","map","db","require","App","useState","pitch","setPitch","errorMsg","setErrorMsg","handleSubmit","preventDefault","input","target","value","results","filter","item","startsWith","console","table","getPitch","Fragment","href","style","marginBottom","onSubmit","icon","faSearch","placeholder","animationIn","inDuration","inDelay","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6aeda62.chunk.js","sourcesContent":["enum PitchType {\n  Heiban,\n  Atamadaka,\n  Nakadaka,\n  Odaka,\n  NONE,\n}\n\nenum WordType {\n  Noun,\n  Verb,\n  Adj,\n  OTHER,\n}\n\ninterface Result {\n  word: string\n  pitchNumber: number\n  reading: string\n  pitchType: PitchType\n  mora: number\n  wordType: WordType\n}\n\nexport const IsSmallKana = (k: string) => {\n  const smallKana = [\n    \"ゃ\",\n    \"ゅ\",\n    \"ょ\",\n    \"ぁ\",\n    \"ぃ\",\n    \"ぅ\",\n    \"ぇ\",\n    \"ぉ\",\n    \"ャ\",\n    \"ュ\",\n    \"ョ\",\n    \"ァ\",\n    \"ィ\",\n    \"ゥ\",\n    \"ェ\",\n    \"ォ\",\n  ]\n\n  let found = false\n  smallKana.forEach((e) => {\n    if (e === k) found = true\n  })\n  return found\n}\n\nexport const ParseNHK = (data: any) => {\n  const dWord: string = data[\"Word 1A\"]\n  let dPitch: string = data[\"Pitch 1.1\"]\n  let dMora = 0\n\n  let result: Result = {\n    word: \"empty\",\n    pitchNumber: -1,\n    reading: \"no reading\",\n    pitchType: PitchType.NONE,\n    mora: 0,\n    wordType: WordType.OTHER,\n  }\n\n  const ParseNHKWord = () => {\n    const locStart = dWord.indexOf(\"【\") + 1\n    const locEnd = dWord.indexOf(\"】\")\n    result.word = dWord.substring(locStart, locEnd)\n  }\n\n  const ParseNHKPitchNumber = () => {\n    if (dPitch) {\n      if (dPitch.includes(\"・\")) {\n        dPitch = dPitch.replace(\"・\", \"\")\n      }\n      let a: string[] = []\n      if (dPitch.indexOf(\"￣\") === -1) {\n        // Kifukushiki\n        a = dPitch.split(\"\")\n        let dropFound = false\n        a.forEach((e, i) => {\n          if (e.charCodeAt(0) === 12442) {\n            a.splice(i, 1)\n          }\n          if (e === \"＼\") {\n            if (!dropFound) {\n              result.pitchNumber = i\n              dropFound = true\n            }\n          }\n        })\n      } else {\n        // Heibanshiki\n        result.pitchNumber = 0\n      }\n      result.reading = a.toString()\n    }\n  }\n\n  const ParseNHKReading = () => {\n    const readingKana = dWord.substring(0, dWord.indexOf(\"【\"))\n    result.reading = readingKana\n  }\n\n  const ParseNHKMora = () => {\n    for (let index = 0; index < result.reading.length; index++) {\n      const m = result.reading[index]\n      if (!IsSmallKana(m)) {\n        dMora++\n      }\n    }\n    result.mora = dMora\n  }\n\n  const ParseNHKPitchType = () => {\n    if (result.pitchNumber === 0) {\n      result.pitchType = PitchType.Heiban\n      return\n    }\n    if (result.pitchNumber === 1) {\n      result.pitchType = PitchType.Atamadaka\n      return\n    }\n    if (result.pitchNumber < dMora) {\n      result.pitchType = PitchType.Nakadaka\n      return\n    } else {\n      result.pitchType = PitchType.Odaka\n      return\n    }\n  }\n\n  const ParseNHKWordType = () => {\n    if (data[\"Verb 1.1\"] !== undefined) {\n      result.wordType = WordType.Verb\n    }\n    if (data[\"Adj 1.1\"] !== undefined) {\n      result.wordType = WordType.Adj\n    }\n  }\n\n  ParseNHKWord()\n  ParseNHKPitchNumber()\n  ParseNHKReading()\n  ParseNHKMora()\n  ParseNHKPitchType()\n  ParseNHKWordType()\n\n  return result\n}\n\nexport const GetPitchTypeName = (n: PitchType) => {\n  switch (n) {\n    case PitchType.Heiban:\n      return \"Heiban（平板）\"\n    case PitchType.Atamadaka:\n      return \"Atamadaka（頭高）\"\n    case PitchType.Nakadaka:\n      return \"Nakadaka（中高）\"\n    case PitchType.Odaka:\n      return \"Odaka（尾高）\"\n    default:\n      return \"ERROR\"\n  }\n}\n","import { GetPitchTypeName, IsSmallKana, ParseNHK } from \"../config/Utilities\"\n\nexport default function PitchCard({ data }: any) {\n  const parsedData = ParseNHK(data)\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-top\">\n        <div className=\"card-title\">{data[\"Word 1A\"]}</div>\n        <div className=\"card-number\">{parsedData.pitchNumber}</div>\n        <div className=\"card-wordtype\">\n          {GetPitchTypeName(parsedData.pitchType)}\n        </div>\n      </div>\n      <div className=\"card-reading\">\n        <PitchDrawing\n          reading={parsedData.reading}\n          pitchNumber={parsedData.pitchNumber}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst PitchDrawing = ({ reading, pitchNumber }: any) => {\n  let readingList: any = []\n  // For use with Nakadaka & Odaka only\n  let currentMora: number = 1\n\n  for (let index = 0; index < reading.length; index++) {\n    // Check if current mora is attached to the previous mora\n    if (!IsSmallKana(reading[index])) {\n      let _mora: any\n\n      // Check if next mora is attached to the current mora\n      if (IsSmallKana(reading[index + 1])) {\n        _mora = reading[index] + reading[index + 1]\n      } else {\n        _mora = reading[index]\n      }\n\n      // Heiban\n      if (pitchNumber === 0) {\n        if (index === 0) {\n          readingList.push({ mora: _mora, type: \"rise\" })\n        } else {\n          readingList.push({ mora: _mora, type: \"high\" })\n        }\n      }\n      // Atamadaka\n      if (pitchNumber === 1) {\n        if (index === 0) {\n          readingList.push({ mora: _mora, type: \"drop\" })\n        } else {\n          readingList.push({ mora: _mora, type: \"low\" })\n        }\n      }\n      // Nakadaka & Odaka\n      if (pitchNumber > 1) {\n        // console.log(\n        //     `Mora: ${_mora} moraIndex: ${currentMora} pitchDrop: ${pitchNumber}`\n        // )\n        if (index === 0) {\n          readingList.push({ mora: _mora, type: \"rise\" })\n        } else {\n          if (currentMora < pitchNumber) {\n            readingList.push({ mora: _mora, type: \"high\" })\n          }\n          if (currentMora === pitchNumber) {\n            readingList.push({ mora: _mora, type: \"drop\" })\n          }\n          if (currentMora > pitchNumber) {\n            readingList.push({ mora: _mora, type: \"low\" })\n          }\n        }\n        currentMora++\n      }\n    }\n  }\n\n  return (\n    <div className=\"pitch-container\">\n      {readingList.map((e: any, i: number) => (\n        <span key={i} className={\"pitch-\" + e.type}>\n          {e.mora}\n        </span>\n      ))}\n    </div>\n  )\n}\n","import { faSearch } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport PitchCard from \"./components/PitchCard\"\nimport \"animate.css\"\nimport Animate from \"@charlesvien/react-animatecss\"\nconst db = require(\"./db/NHKdata.json\")\n\nconst App = () => {\n  const [pitch, setPitch] = useState([])\n  const [errorMsg, setErrorMsg] = useState<string>()\n\n  const getPitch = (e: any) => {\n    // Get all results starting with the query\n    const results = db.filter(\n      (item: any) =>\n        item[\"Word 1A\"].startsWith(e) ||\n        item[\"Word 1A\"].indexOf(e) === item[\"Word 1A\"].indexOf(\"【\") + 1\n    )\n    if (results.length > 0) {\n      console.table(results)\n      setErrorMsg(\"\")\n      setPitch(results)\n    } else {\n      setErrorMsg(`There are no results for: ${e}`)\n      setPitch([])\n    }\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    const input = e.target[0].value\n\n    if (input && input !== \"\") {\n      getPitch(input)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <a href=\".\">\n        <h1>Pitch Accent</h1>\n      </a>\n      <h2 style={{ marginBottom: \"2em\" }}>Japanese Pitch Accent Dictionary</h2>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"input-container\">\n          <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\n          <input type=\"text\" placeholder=\"Search Japanese Word\" />\n        </div>\n        <button type=\"submit\">Search</button>\n      </form>\n      <div className=\"results-container\">\n        {pitch.map((e, i) => (\n          <Animate\n            key={`${e[\"Word 1A\"]} ${i}`}\n            animationIn=\"fadeIn\"\n            inDuration={500}\n            inDelay={i * 100}\n          >\n            <PitchCard data={e} />\n          </Animate>\n        ))}\n      </div>\n      <div className=\"errorMsg\">{errorMsg}</div>\n\n      <a href=\"https://patrickauri.com\" target=\"_blank\" rel=\"noreferrer\">\n        <p className=\"text-secondary\" style={{ marginBottom: \"1em\" }}>\n          Created by Patrick Auri\n        </p>\n      </a>\n      <a\n        className=\"github-button\"\n        href=\"https://github.com/patrickauri\"\n        aria-label=\"Follow @patrickauri on GitHub\"\n      >\n        Follow @patrickauri\n      </a>\n      <a\n        className=\"github-button\"\n        href=\"https://github.com/patrickauri/japanesepitchaccent\"\n        data-icon=\"octicon-star\"\n        aria-label=\"Star patrickauri/japanesepitchaccent on GitHub\"\n      >\n        Star\n      </a>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}